/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacesG;

import java.sql.*;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JuanMa
 */
public class EstadosCanales extends javax.swing.JFrame {

    /**
     * Creates new form EstadosServidores
     */
    public EstadosCanales() {
        initComponents();
        conectarProductos();
        conectarCompras();
        conectarRegulaciones();
        conectarEnvios();
        conectarPagos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCompras = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaInfracciones = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEnvios = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaPagos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estado de Canales");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id_producto", "detalle", "precio_unitario", "stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        jTabbedPane1.addTab("Canales S. Productos", jScrollPane1);

        tablaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaCompras);

        jTabbedPane1.addTab("Canales S. Web", jScrollPane2);

        tablaInfracciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tablaInfracciones);

        jTabbedPane1.addTab("Canales S. Infracciones", jScrollPane4);

        tablaEnvios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaEnvios);

        jTabbedPane1.addTab("Canales S. Envios", jScrollPane3);

        tablaPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tablaPagos);

        jTabbedPane1.addTab("Canales S. Pagos", jScrollPane5);

        jButton1.setText("Refrescar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        conectarProductos();
        conectarCompras();
        conectarRegulaciones();
        conectarEnvios();
        conectarPagos();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadosCanales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadosCanales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadosCanales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadosCanales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadosCanales().setVisible(true);
            }
        });
    }
    
    private void conectarProductos(){
        Connection con;
        Statement st = null;
        ResultSet rs;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/servidor_productos", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
        
        String query = "SELECT * FROM canales";
        DefaultTableModel model = new DefaultTableModel();
                
        model.addColumn("id");
        model.addColumn("nombre_canal");
        model.addColumn("estado_canal");
        
        tablaProductos.setModel(model);
        int cantCampos = model.getColumnCount();
        
        String [] dato = new String [cantCampos];        
        try {
            rs = st.executeQuery(query);
            while (rs.next()){
               for (int i = 0; i<cantCampos; i++) {
                dato[i] = rs.getString(i+1);
            }
                model.addRow(dato);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
    }
    private void conectarCompras(){
        Connection con;
        Statement st = null;
        ResultSet rs;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/servidor_compras", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
        
         String query = "SELECT * FROM canales";
        DefaultTableModel model = new DefaultTableModel();
                
        model.addColumn("id");
        model.addColumn("nombre_canal");
        model.addColumn("estado_canal");        
        
        tablaCompras.setModel(model);
        int cantCampos = model.getColumnCount();
        
        String [] dato = new String [cantCampos];        
        try {
            rs = st.executeQuery(query);
            while (rs.next()){
               for (int i = 0; i<cantCampos; i++) {
                dato[i] = rs.getString(i+1);
            }
                model.addRow(dato);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
    }
    private void conectarRegulaciones(){
        Connection con;
        Statement st = null;
        ResultSet rs;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/servidor_regulaciones", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
        
         String query = "SELECT * FROM canales";
        DefaultTableModel model = new DefaultTableModel();
                
        model.addColumn("id");
        model.addColumn("nombre_canal");
        model.addColumn("estado_canal");      
        
        tablaInfracciones.setModel(model);
        int cantCampos = model.getColumnCount();
        
        String [] dato = new String [cantCampos];        
        try {
            rs = st.executeQuery(query);
            while (rs.next()){
               for (int i = 0; i<cantCampos; i++) {
                dato[i] = rs.getString(i+1);
            }
                model.addRow(dato);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
    }
    private void conectarEnvios(){
        Connection con;
        Statement st = null;
        ResultSet rs;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/servidor_envios", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
        
         String query = "SELECT * FROM canales";
        DefaultTableModel model = new DefaultTableModel();
                
        model.addColumn("id");
        model.addColumn("nombre_canal");
        model.addColumn("estado_canal");      
        
        tablaEnvios.setModel(model);
        int cantCampos = model.getColumnCount();
        
        String [] dato = new String [cantCampos];        
        try {
            rs = st.executeQuery(query);
            while (rs.next()){
               for (int i = 0; i<cantCampos; i++) {
                dato[i] = rs.getString(i+1);
            }
                model.addRow(dato);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
    }
    private void conectarPagos(){
        Connection con;
        Statement st = null;
        ResultSet rs;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/servidor_pagos", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
        
        String query = "SELECT * FROM canales";
        DefaultTableModel model = new DefaultTableModel();
                
        model.addColumn("id");
        model.addColumn("nombre_canal");
        model.addColumn("estado_canal");      
        
        tablaPagos.setModel(model);
        int cantCampos = model.getColumnCount();
        
        String [] dato = new String [cantCampos];        
        try {
            rs = st.executeQuery(query);
            while (rs.next()){
               for (int i = 0; i<cantCampos; i++) {
                dato[i] = rs.getString(i+1);
            }
                model.addRow(dato);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }    
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaCompras;
    private javax.swing.JTable tablaEnvios;
    private javax.swing.JTable tablaInfracciones;
    private javax.swing.JTable tablaPagos;
    private javax.swing.JTable tablaProductos;
    // End of variables declaration//GEN-END:variables
}
